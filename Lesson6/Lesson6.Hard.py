# Задача - 1
# Вам необходимо создать завод по производству мягких игрушек для детей.
# Вам надо продумать структуру классов,
# чтобы у вас был класс, который создает игрушки на основании:
#  Названия, Цвета, Типа (животное, персонаж мультфильма)
# Опишите процедуры создания игрушки в трех методах:
# -- Закупка сырья, пошив, окраска
# Не усложняйте пусть методы просто выводят текст о том, что делают.
# В итоге ваш класс по производству игрушек должен вернуть объект нового класса Игрушка.

# Задача - 2
# Доработайте нашу фабрику, создайте по одному классу на каждый тип, теперь надо в классе фабрика
# исходя из типа игрушки отдавать конкретный объект класса, который наследуется от базового - Игрушка

#Базовый класс игрушки
class Toy:
    def __init__(self, name, color):
        self.name = name
        self.color = color
        self.type = 'Не определен'

#Класс игрушки - персонажа мультфильма, наследуемый от базового класса игрушки
class CartoonToy(Toy):
    def __init__(self, name, color):
        Toy.__init__(self,name,color)
        self.type = 'Персонаж мультфильма'

#Класс игрушки - животного, наследуемый от базового класса игрушки
class AnimalToy(Toy):
    def __init__(self, name, color):
        Toy.__init__(self, name, color)
        self.type = 'Животное'

#Класс завода по производству игрушек
class ToyFactory:
    def __init__(self, name, address):
        self.name = name
        self.address = address
        self.current_order_number = 0

#Функция по производству игрушек
    def produce_toy(self, name, color, type):
#Счетчик заказов завода, хотел проверить как он себя поведет
        self.current_order_number += 1
#Выполняем этапы производства
        print('Производим новую игрушку. Заказ №', self.current_order_number)
        self.buy_source()
        self.sew()
        self.paint()
#Определяем какой именно класс игрушки мы выпустим, в зависимости от указанного типа
#Если указан неизвестный или некорректный тип - выпускаем игрушку базового класса
        if type == 'Персонаж мультфильма':
            toy_produced = CartoonToy(name, color)
        elif type == 'Животное':
            toy_produced = AnimalToy(name, color)
        else:
            toy_produced = Toy(name, color)
        return toy_produced

#Функции производственного цикла
    def buy_source(self):
        print ('Заказ сырья')
    def sew(self):
        print('Пошив')
    def paint(self):
        print('Окраска')

#Строим завод игрушки
MyToyFactory = ToyFactory('Завод игрушки им. Красного октября', 'ул. Стачек 14')

#Инициализируем список произведенных игрушек (склад готовой продукции)
MyToys = []

#Производим игрушки и кладем их на склад
MyToys.append(MyToyFactory.produce_toy('Чебурашка','Коричневый','Персонаж мультфильма'))
MyToys.append(MyToyFactory.produce_toy('Плюшевый медведь','Серый','Животное'))
MyToys.append(MyToyFactory.produce_toy('Подушка','Серый','Непонятно что'))

#Выводим информацию об игрушках, находящихся на складе готовой продукции
for item in MyToys:
    print ('\nВыпущена новая игрушка:')
    print ('Класс:', item)
    print ('Название:', item.name)
    print ('Цвет:', item.color)
    print ('Тип:', item.type)
